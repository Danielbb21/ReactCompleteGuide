{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntered","setIsEntered","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","console","log","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBC0D/BC,EAvDG,SAACL,GAEjB,MAAkCM,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAuBrB,OACE,qCACA,cAAC,IAAD,CAAQE,KAAQL,EAAWM,QAAW,SAACC,GAAD,MAAa,+DACnD,cAAC,EAAD,UACE,uBAAMC,QAZa,WACrBP,GAAa,IAWoBP,UAAWC,IAAQc,KAAMC,SAzB5D,SAA2BC,GACzBA,EAAMC,iBACNC,QAAQC,IAAI,QAEZ,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzCxB,EAAM0B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAgB9C,UACGzB,EAAM6B,WACL,qBAAK5B,UAAWC,IAAQ4B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK3B,OAEtC,sBAAKR,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKzB,OAEpC,qBAAKV,UAAWC,IAAQoC,QAAxB,SACE,wBAAQC,QAxBa,WAC3BnB,QAAQC,IAAI,QACZb,GAAa,IAsBkCP,UAAU,MAAnD,kC,gBC5BKuC,UAnBE,WACb,IAAMC,EAAUC,cAChB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACrBC,qBAAU,WACS,cAAXD,GACAL,EAAQO,KAAK,aAElB,CAACF,EAAQL,IASZ,OAAQ,cAAC,EAAD,CAAWZ,UAAwB,YAAXiB,EAAsBpB,WAP9B,SAAAuB,GACpBJ,EAAYI","file":"static/js/6.41004b5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2gqPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__DoOmS\",\"loading\":\"QuoteForm_loading__3pec9\",\"control\":\"QuoteForm_control__4XrxP\",\"actions\":\"QuoteForm_actions__3Rid3\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    console.log('aqui');\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n\n  const onFocusHandler = () => {\n    setIsEntered(true);\n  };\n\n  const finishEnteredHandler = () =>{\n    console.log('aqui');\n    setIsEntered(false);\n  }\n  return (\n    <>\n    <Prompt when = {isEntered} message = {(location)=> 'Are you sure you want to live, all your data will be lost'}/>\n    <Card>\n      <form onFocus={onFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick = {finishEnteredHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nimport { useEffect } from 'react';\r\n\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (<QuoteForm isLoading = {status === 'pending'} onAddQuote={addQuoteHandler} />);\r\n}\r\n\r\nexport default NewQuote;"],"sourceRoot":""}